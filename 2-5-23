CREATE TABLE CAR(
CAR_NO INT,CAR_NAME VARCHAR(40),CAR_PRICE INT,CAR_QUANTITY INT);
INSERT INTO CAR VALUES(112,'TESLA',120000,2),(113,'BMW',230000,3),(114,'AUDI',250000,4);
INSERT INTO CAR VALUES(116,'TATA',120000,5),(119,'KIA',230000,4);
SELECT *FROM CAR;
-- GROUP BY KEYWORD 

SELECT COUNT(CAR_NAME),CAR_PRICE FROM CAR GROUP BY CAR_PRICE;

SELECT COUNT(CAR_NAME) AS COUNT_NUMBER,CAR_PRICE FROM CAR GROUP BY CAR_PRICE;

SELECT COUNT(CAR_NAME) FROM CAR GROUP BY CAR_PRICE HAVING CAR_PRICE >120000;

SELECT COUNT(*) FROM CAR GROUP BY CAR_PRICE HAVING CAR_PRICE >120000;-- COUNT THE NO.OF CARS HAVING CAR_PRICE AS >120000

CREATE TABLE VISIT(
ENTRY_DATE  DATE,PRICE INT,DURATION INT );
INSERT INTO VISIT VALUES('2023-5-1',1000,20),('2023-5-1',2000,30),('2023-6-20',3000,45),('2023-6-20',4000,60),('2023-7-10',5000,60),
('2023-7-10',5000,30);
SELECT * FROM VISIT;

SELECT ENTRY_DATE, COUNT(*) FROM VISIT GROUP BY ENTRY_DATE;
-- EXTRACT KEYWORD EXAMPLES

SELECT EXTRACT(YEAR FROM ENTRY_DATE) AS YEAR ,
EXTRACT(MONTH FROM ENTRY_DATE) AS MONTH,
-- ROUND FUN ROUND OF THE DECIMAL POINTS UPTO 2 DECIMALS
ROUND(AVG(PRICE),3) FROM VISIT GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE);


SELECT EXTRACT(YEAR FROM ENTRY_DATE) AS YEAR ,
EXTRACT(MONTH FROM ENTRY_DATE) AS MONTH,
EXTRACT(DAY FROM ENTRY_DATE) AS DAY,
ROUND(AVG(PRICE),3) FROM VISIT
GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE),
EXTRACT(DAY FROM ENTRY_DATE)
ORDER BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE);
SELECT * FROM VISIT;

SELECT ENTRY_DATE, ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*) > 1 ORDER BY ENTRY_DATE;

SELECT ENTRY_DATE, ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*) > 3 ORDER BY ENTRY_DATE;

SELECT ENTRY_DATE, ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT WHERE DURATION >30
 GROUP BY ENTRY_DATE HAVING COUNT(*) > 1 ORDER BY ENTRY_DATE ;
 
 
 
 SELECT * FROM CUSTOMER;
 
SELECT CITY,COUNT(*) AS CUSTOMER_CITY FROM CUSTOMER GROUP BY CITY; 

CREATE TABLE EMPLOYEE(
EMP_ID INT, NAME VARCHAR(25), AGE INT,COUNTRY VARCHAR(30)
);
INSERT INTO EMPLOYEE VALUES(100,'SWAPNA',34,'INDIA'),
(101,'SAMRIN',23,'US'),
(102,'YAMUNA',39,'US'),
(103,'SWATHI',40,'PAKISTAN'),(105,'SUNANDHA',50,'INDIA');
INSERT INTO EMPLOYEE VALUES(110,'SWETHA',20,'INDIA');
SELECT * FROM EMPLOYEE; 

SELECT COUNT(COUNTRY) AS COUNTRY_NO,COUNTRY FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;

SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING MAX(AGE) >= 30;

SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING MIN(AGE) >= 30;

CREATE TABLE MANAGER(
ID INT,NAME VARCHAR(30),GENDER VARCHAR(20),SALARY INT);
DROP TABLE MANAGER;
CREATE TABLE MANAGER1(
ID INT,NAME VARCHAR(30),GENDER VARCHAR(20),AGE INT,SALARY INT);
INSERT INTO MANAGER1 VALUES(101,'SWAPNA','F',20,100000),(102,'SWATHI','F',20,200000),(103,'SWETHA','F',22,400000),(141,'SUMANTH','M',21,100000),
(105,'RAHUL','M',24,12000);
INSERT INTO MANAGER1 VALUES(106,'SWAPNA','F',20,100000);
INSERT INTO MANAGER1 VALUES(107,'SAMRIN','F',24,100000);

SELECT * FROM MANAGER1;

SELECT NAME,SUM(SALARY) AS TOTAL_SALARY FROM MANAGER1 GROUP BY NAME HAVING SUM(SALARY) >100000 ORDER BY NAME;

SELECT AGE FROM MANAGER1 GROUP BY AGE HAVING COUNT(AGE) >2;

SELECT AGE FROM MANAGER1 GROUP BY AGE HAVING COUNT(AGE) >1;

SELECT GENDER,MAX(SALARY) AS MAX_SALARY FROM MANAGER1 GROUP BY GENDER HAVING MAX(SALARY) <200000;

SELECT GENDER,MIN(SALARY) AS MAX_SALARY FROM MANAGER1 GROUP BY GENDER HAVING MIN(SALARY) <200000;

DELIMITER // 
CREATE PROCEDURE GetManagerInfo()
  BEGIN
	select * from MANAGER1;
  END //

CALL GetManagerInfo()

DELIMITER // 
CREATE PROCEDURE GetManagerAge()
  BEGIN
	select * from MANAGER1  where age=20;
  END //

CALL GetManagerAge();

select * from manager1;

SELECT NAME FROM MANAGER1 ORDER BY RAND() LIMIT 2;



show databases;

select * from rgm;

update rgm set name='ravi' where college='Korm';-- updating the table column u can apply update only on the exixting data in table.

update rgm set session ='angular' where name='maddy';

create table test (name varchar(30),
college varchar(30),
session varchar(30),
contactnumber int,
address varchar(30)
);

select *from test;
insert into test select * from rgm;-- which means insert into inserts all values of table rgm into newly created table 'test'.

update test set session='react' where college="KSRM";

-- inorder to insert makesure that  ur old table and 
 -- new table are in the same database.if u want to insert into 
-- new table which is in one database and old table is in another data base then use this query.
-- INSERT INTO test select * from herovired.rgm;

truncate table test;-- it will data in table

delete from rgm where name='maddy';-- delete a row from table.
drop table test;

select * from rgm;

alter table rgm rename column contactnumber to phone;-- in order to change the column name u can use this querry.

alter table rgm rename to rgm_student;-- change table name

select * from rgm_student;

update rgm_student set favourite_dish ="chicken" where session ='jav';-- add values to column

select * from rgm_student;

alter table  rgm_student modify phone varchar(30);

alter table rgm_student rename column favourite to favourite_dish;-- change cloumn name.

create database suns;-- creates database

show databases;-- shows databases

drop database suns; -- delete database

alter table rgm_student add column favourite varchar(30);-- when u want add a column in table

alter table rgm_student modify column phone varchar(40);--  when u want change data type and size.

alter table rgm_student drop column favourite_dish;-- when u want to delete/drop a column
select * from rgm_student;
alter table rgm_student drop column favourite;
alter table rgm_student drop column name,drop column phone; -- when u want to delete multiple columns from a table.

select * from student;
select min(student_marks) from student;-- to find min 
select max(student_marks) from student;-- to find max
select sum(student_marks) from student;-- add all marks in the marks column.
select sum(student_marks) as total from student;-- to change sum to total column NAME.
select count(student_marks) from student;-- counts numbers of marks rows in table
 create database EXCERSIE;
create table customer(ID int primary key not null,
 name varchar(30),city varchar(30),grade int,slaes_id int);
 
 insert into customer values(671,'madhu','bhopal',5,12345),(122,'lochan','chennai',4,2345),
 (123,'ravi','manglore',4,2334),(124,'mahesh','nandyal',4,2335),(145,'abhi','banglore',3,24345),
 (142,'jaya','chennur',4,2785),(888,'kiran','mumbai',4,29995),(678,'ramu','lucknow',4,566655);
 
 select * from customer;
 
 -- write a sql query to find out the details of the customer whose grade are above 3.
 SELECT * FROM CUSTOMER WHERE GRADE >4;
  -- write sql query to find details of customer whose grade are graeter than or equal to 3
  select * from customer where grade >=3;
  
    select * from customer where grade >=3 order by grade;
select * from customer where id>125 order by id;
select * from customer where grade>=3 and city ='chenai';
select * from customer where grade>=4 and city ='hyderabad';
select * from customer where city='nandyal' and grade>=2;
 select * from customer;
 select * from customer where grade>=3 and city ='nandyal';
  select name from customer where grade>=3 and city ='nandyal';
   select * from customer where grade>=7 or city ='nandyal';
   
-- write query to find customer details who are either from chennai city or who dont above grade more than 7
   select * from customer where grade>=7 or not city ='chennai';
    select * from customer where grade>=7 or not city ='chennai';
    
    CREATE TABLE SALESMAN(ID INT PRIMARY KEY,NAME VARCHAR(20),CITY VARCHAR(20),COMMISSION FLOAT);
INSERT INTO SALESMAN VALUES
(200,"PRASANNA","KURNOOL",0.45),
(201,"KEERTHI","NANDYAL",0.23),
(202,"KAVYA","HYDERABAD",0.32),
(203,"KEERTHANA","BANGALORE",0.43);
SELECT * FROM SALESMAN;
SELECT * FROM SALESMAN WHERE COMMISSION BETWEEN 0.23 AND 0.43;
SELECT * FROM SALESMAN WHERE NAME LIKE "K%";
alter table salesman add column address varchar(40);
 update salesman set address='pak' where id=200;
  update salesman set address='ndk' where id=202;
   update salesman set address='knl' where id=203;
    update salesman set address='ndl' where id=201;
select * from salesman order by address desc;
select * from salesman order by id asc;

select city as town from salesman;





